package com.bakebuddy.service.impl;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;

import com.bakebuddy.dto.UserDto;
import com.bakebuddy.repository.UserRepository;
import com.bakebuddy.service.UserService;
import com.bakebuudy.entites.User;

public class UserServiceImpl implements UserService{

	   @Autowired
	    private UserRepository userRepository;
	@Override
	public User findUserProfileByJwt(String jwt) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public User findUserByEmail(String email) {
		// TODO Auto-generated method stub
		return null;
	}

	 @Override
	    public UserDto getUserById(Long id) {
	        User user = userRepository.findById(id).orElseThrow(() -> new RuntimeException("User not found"));
	        return new UserDto(user.getId(), user.getName(), user.getEmail(), user.getRole());
	    }
	    
	    @Override
	    public List<UserDto> getAllUsers() {
	        return userRepository.findAll().stream()
	                .map(user -> new UserDto(user.getId(), user.getName(), user.getEmail(), user.getRole()))
	                .collect(Collectors.toList());
	    }
	    
	    @Override
	    public UserDto createUser(UserDto userDto) {
	        User user = new User();
	        user.setName(userDto.getName());
	        user.setEmail(userDto.getEmail());
	        user.setRole(userDto.getRole());
	        user = userRepository.save(user);
	        return new UserDto(user.getId(), user.getName(), user.getEmail(), user.getRole());
	    }
	    
	    @Override
	    public UserDto updateUser(Long id, UserDto userDto) {
	        User user = userRepository.findById(id).orElseThrow(() -> new RuntimeException("User not found"));
	        user.setName(userDto.getName());
	        user.setEmail(userDto.getEmail());
	        user.setRole(userDto.getRole());
	        user = userRepository.save(user);
	        return new UserDto(user.getId(), user.getName(), user.getEmail(), user.getRole());
	    }
	    
	    @Override
	    public void deleteUser(Long id) {
	        userRepository.deleteById(id);
	    }
	



}
