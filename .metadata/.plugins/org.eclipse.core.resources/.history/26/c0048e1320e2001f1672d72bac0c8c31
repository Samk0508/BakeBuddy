package com.bakebuddy.entites;


import java.time.LocalDateTime;
import java.util.List;

import com.bakebuddy.enums.OrderStatus;
import com.bakebuddy.enums.PaymentStatus;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Table(name = "orders")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Order {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    //@JoinColumn(name = "user_id")
    private User customer;
    
    private Long sellerId;
    
    @ManyToOne
    private Address shippingAddress;
    
    @Embedded
    private PaymentDetails paymentDetails=new PaymentDetails();

    @OneToMany(mappedBy = "order", cascade = CascadeType.ALL)
    private List<OrderItem> orderItems;


    private double totalMrpPrice;
    
    private Integer totalSellingPrice;
    
    private Integer discount;

    private OrderStatus orderStatus;
    
    private int totalItem;

    private PaymentStatus paymentStatus=PaymentStatus.PENDING;

    private LocalDateTime orderDate = LocalDateTime.now();
    private LocalDateTime deliverDate = orderDate.plusMinutes(30);


   
    
    
}

